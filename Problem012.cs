/*Project Euler - Problem 12
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 * 
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * 
 * Let us list the factors of the first seven triangle numbers:

 * 1: 1
 * 3: 1,3
 * 6: 1,2,3,6
 * 10: 1,2,5,10
 * 15: 1,3,5,15
 * 21: 1,3,7,21
 * 28: 1,2,4,7,14,28
 * We can see that 28 is the first triangle number to have over five divisors.
 * 
 * What is the value of the first triangle number to have over five hundred divisors?
 */

using System;

namespace ProjectEulerWorkspace
{
    internal class Program
    {
        public static void Main(string[] args)
        {
            int series = 2;
            int divisorCount = 0;
            int triangleNum = 1;

            while (divisorCount < 500)
            {
                triangleNum = findTriangleSum(series);
                series++;

                divisorCount = countDivisors(triangleNum);
            }
            
            Console.WriteLine(triangleNum);
        }

        static int findTriangleSum(int num)
        {
            return num*(num+1)/2;
        }

        static int countDivisors(int num)
        {
            int count = 0;
            
            for (int i = 1; i < (int) Math.Sqrt(num) + 1; i++)
            {
                if (num % i == 0)
                {
                    count++;
                }
            }
            
            return count * 2;
        }
    }
}
